<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfedu.ruby.dao.TorderMapper">
  <resultMap id="BaseResultMap" type="com.qfedu.ruby.pojo.Torder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="addressid" jdbcType="INTEGER" property="addressid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, money, msg, addressid, createtime, flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qfedu.ruby.pojo.Torder">
    insert into t_order (id, uid, money, 
      msg, addressid, createtime, 
      flag)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{money,jdbcType=INTEGER}, 
      #{msg,jdbcType=VARCHAR}, #{addressid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qfedu.ruby.pojo.Torder">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="addressid != null">
        addressid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="addressid != null">
        #{addressid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qfedu.ruby.pojo.Torder">
    update t_order
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="addressid != null">
        addressid = #{addressid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qfedu.ruby.pojo.Torder">
    update t_order
    set uid = #{uid,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      msg = #{msg,jdbcType=VARCHAR},
      addressid = #{addressid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>